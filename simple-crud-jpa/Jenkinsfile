pipeline {
    agent any

    environment {
        MAVEN_HOME = tool 'Maven-3.9.11'   // Ensure this tool name matches Jenkins config
        JAVA_HOME = tool 'JDK-21'          // Match your configured JDK
        PATH = "${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${env.PATH}"
        DOCKER_IMAGE = "thechief28/vault-spring-boot/simple-crud-jpa:${env.BUILD_NUMBER}"
        PROJECT_DIR = "simple-crud-jpa"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/anandakevin/vault-spring-boot.git'
            }
        }

        stage('Build') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh 'mvn clean compile'
                }
            }
        }

        stage('Package') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh 'mvn package -DskipTests'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: '${PROJECT_DIR}/target/*.jar', fingerprint: true
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir("${PROJECT_DIR}") {
                        sh "docker build -t ${DOCKER_IMAGE} ."
                    }
                }
            }
        }

        stage('Push Docker Image') {
            when {
                branch 'main'
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                        docker push ${DOCKER_IMAGE}
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Build and Docker image pushed successfully!'
        }
        failure {
            echo 'Build failed. Please check the logs.'
        }
    }
}
