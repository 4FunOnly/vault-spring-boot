pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "4funonly/vault-spring-boot-simple-crud-jpa:latest"
        PROJECT_DIR = "simple-crud-jpa"
        ANSIBLE_DIR = "/home/jenkins/ansible"
        REPO_URL="https://github.com/4FunOnly/vault-spring-boot"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: "${env.REPO_URL}"
            }
        }

        stage('Build & Package') {
            steps {
                dir("${env.PROJECT_DIR}") {
                    sh 'mvn clean package -DskipTests'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: "${env.PROJECT_DIR}/target/*.jar", fingerprint: true
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir("${env.PROJECT_DIR}") {
                    sh "docker build -t ${env.DOCKER_IMAGE} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                sh """
                echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                docker push ${env.DOCKER_IMAGE}
                docker logout
                """
                }
            }
        }

        stage('Deploy via Ansible') {
            steps {
                echo 'Starting deploy'
                sh """
                ansible-playbook -i /home/ansible/inventories/inventory.ini \
                ${env.ANSIBLE_DIR}/playbooks/deploy-simple-crud-jpa.yml \
                --extra-vars "image=${env.DOCKER_IMAGE}"
                """
            }
        }
    }

    post {
        success {
            echo 'Anjay Berhasil'
        }
        failure {
            echo 'Gagal Slur'
        }
    }
}
